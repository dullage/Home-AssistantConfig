- platform: template
  sensors:
    ad_hoc_heating_time:
      friendly_name: "Set Time"
      value_template: "{% if states.input_number.ad_hoc_heating_time_hour.state|round(0)|string|length == 1 %}0{% endif %}{{ states.input_number.ad_hoc_heating_time_hour.state|round(0)|string }}:{% if states.input_number.ad_hoc_heating_time_minute.state|round(0)|string|length == 1 %}0{% endif %}{{ states.input_number.ad_hoc_heating_time_minute.state|round(0)|string }}"

    bathroom_excess_humidity:
      unit_of_measurement: "%"
      friendly_name: "Bathroom Excess Humidity"
      value_template: >
        {{ max([0, float(states('sensor.bathroom_temperature_sensor_humidity'))
                 - float(states('sensor.landing_temperature_sensor_humidity'))]) | round(2) }}

    energy_cost_per_kwh:
      unit_of_measurement: GBP/kWh
      friendly_name: Energy Cost p/kWh
      value_template: "{{ 0.3417 }}"

    current_energy_cost_ph:
      unit_of_measurement: GBP
      friendly_name: "Current Energy Cost (per hour)"
      value_template: >
        {{ ((float(states('sensor.home_power')) / 1000) * (float(states('sensor.energy_cost_per_kwh')))) | round(2) }}

    current_energy_cost_pm:
      unit_of_measurement: GBP
      friendly_name: "Current Energy Cost (per month)"
      value_template: >
        {{ (((float(states('sensor.current_energy_cost_ph')) * 24) * 365) / 12) | round(2) }}

    excess_power_consumption:
      unit_of_measurement: w
      friendly_name: "Excess Power Consumption"
      value_template: >
        {{ float(states('sensor.home_power'))
         - float(states('sensor.fridge_consumption'))
         - float(states('sensor.server_cupboard_power_consumption'))}}
