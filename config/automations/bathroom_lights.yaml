# Turn the bathroom mirror lights on when the main bathroom lights are turned on
- alias: bathroom_lights_mirror_lights_on
  initial_state: true
  trigger:
    platform: state
    entity_id: light.bathroom_all
    to: "on"
  action:
    service: light.turn_on
    entity_id: light.bathroom_mirror_lights

# Turn the bathroom mirror lights off when the main bathroom lights are turned off
- alias: bathroom_lights_mirror_lights_off
  initial_state: true
  trigger:
    platform: state
    entity_id: light.bathroom_all
    to: "off"
  action:
    service: light.turn_off
    entity_id: light.bathroom_mirror_lights

# Turn the bathroom mirror lights on if there is motion in the bathroom after sunset
- alias: bathroom_lights_night_light_on
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.bathroom_motion_sensor_occupancy
    to: "on"
  condition:
    condition: state
    entity_id: sun.sun
    state: "below_horizon"
  action:
    service: light.turn_on
    entity_id: light.bathroom_mirror_lights

# Turn the bathroom mirror lights on if the master bedroom door is opened after sunset
- alias: bathroom_lights_night_light_on_2
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.master_bedroom_door_sensor_contact
    to: "on"
  condition:
    condition: state
    entity_id: sun.sun
    state: "below_horizon"
  action:
    - delay:
        seconds: 2
    - service: light.turn_on
      entity_id: light.bathroom_mirror_lights
    # If no motion in bathroom after 10 seconds and the main bathroom lights are off, turn the light back off again
    - delay:
        seconds: 30
    - condition: state
      entity_id: binary_sensor.bathroom_motion_sensor_occupancy
      state: "off"
    - condition: state
      entity_id: light.bathroom_all
      state: "off"
    - service: light.turn_off
      entity_id: light.bathroom_mirror_lights

# As long as the main bathroom lights are off, turn the bathroom mirror lights off once there has been no motion in the bathroom for 5 seconds (debounce). In reality this timeout is more like 2 minutes due to the polling frequency of the Xiaomi motion sensors.
- alias: bathroom_lights_night_light_off
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.bathroom_motion_sensor_occupancy
    to: "off"
    for:
      seconds: 5
  condition:
    condition: state
    entity_id: light.bathroom_all
    state: "off"
  action:
    service: light.turn_off
    entity_id: light.bathroom_mirror_lights

# When the bathroom lights are turned on (by any means), update the colour temperature based on the sunset/time.
- alias: bathroom_light_temperature
  initial_state: true
  trigger:
    platform: state
    entity_id: light.bathroom_all
    to: "on"
  action:
    - delay:
        seconds: 1
    - choose:
      # IF after sunset or Blue's bedtime
      - conditions:
          - condition: or
            conditions:
              - condition: state
                entity_id: sun.sun
                state: "below_horizon"
              - condition: time
                after: "18:20:00"
        sequence:
          # Fade brightness and temperature separately as they don't seem to work together
          - service: light.turn_on
            data:
              entity_id: light.bathroom_all
              transition: 5
              brightness: 200
          - delay:
              seconds: 5
          - service: light.turn_on
            data:
              entity_id: light.bathroom_all
              transition: 5
              color_temp: 370
      # ELSE
      default:
        # Fade brightness and temperature separately as they don't seem to work together
        - service: light.turn_on
          data:
            entity_id: light.bathroom_all
            transition: 5
            brightness: 255
        - delay:
            seconds: 5
        - service: light.turn_on
          data:
            entity_id: light.bathroom_all
            transition: 5
            color_temp: 250

# When the sun sets, if the bathroom lights are already on, update the colour temperature.
- alias: bathroom_light_temperature_2
  initial_state: true
  trigger:
    - platform: state
      entity_id: sun.sun
      to: 'below_horizon'
  condition:
    condition: state
    entity_id: light.bathroom_all
    state: "on"
  action:
    # Fade brightness and temperature separately as they don't seem to work together
    - service: light.turn_on
      data:
        entity_id: light.bathroom_all
        transition: 5
        brightness: 200
    - delay:
        seconds: 5
    - service: light.turn_on
      data:
        entity_id: light.bathroom_all
        transition: 5
        color_temp: 370
